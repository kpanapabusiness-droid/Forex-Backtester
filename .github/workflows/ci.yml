name: CI
on:
  pull_request:
  push:
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Ruff
        run: ruff check . | tee ruff.log || true

      - name: Pytest
        run: pytest -q 2>&1 | tee pytest.log || true

      - name: Smoke test
        run: python smoke_test_full_v198.py -q 2>&1 | tee smoke.log || true

      - name: Mark job failed if any step failed
        run: |
          set -e
          if grep -Eiq "error" ruff.log; then exit 1; fi
          if grep -Eiq "FAILED|FAILURES|failed|error|traceback|AssertionError" pytest.log; then exit 1; fi
          if grep -Eiq "Traceback|ERROR|failed|AssertionError" smoke.log; then exit 1; fi

      - name: Ensure jq is available
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Verify Discord webhook is present
        if: failure()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          if [ -z "${DISCORD_WEBHOOK_URL}" ]; then
            echo "Discord webhook secret is missing"
            exit 1
          else
            echo "Discord webhook secret is set"
          fi

      - name: Post to Discord on failure
        if: failure()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          PY_TAIL=$(tail -n 80 pytest.log | sed 's/`/\\`/g')
          SM_TAIL=$(tail -n 60 smoke.log  | sed 's/`/\\`/g')
          RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          BODY="**CI failed**: ${{ github.repository }} â€¢ ${{ github.ref_name }}\n<$RUN_URL>\n\nPytest:\n\`\`\`\n$PY_TAIL\n\`\`\`\n\nSmoke:\n\`\`\`\n$SM_TAIL\n\`\`\`"
          BODY=$(printf "%s" "$BODY" | head -c 1900)
          jq -n --arg content "$BODY" '{content:$content}' > payload.json
          curl -fsS -H "Content-Type: application/json" -d @payload.json "$DISCORD_WEBHOOK_URL"
