name: CI
on:
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install
        run: |
          python -m pip install -U pip pytest

      - name: Pytest
        id: pytest
        shell: bash
        run: |
          set +e
          set -o pipefail
          : > pytest.log
          bash -o pipefail -c 'pytest -q 2>&1 | tee -a pytest.log'
          echo "PYTEST_EXIT=${PIPESTATUS[0]}" >> "$GITHUB_OUTPUT"
          exit 0

      - name: Fail if tests failed
        if: always()
        run: |
          if [ "${{ steps.pytest.outputs.PYTEST_EXIT }}" != "0" ]; then exit 1; fi

      - name: Notify Discord on failure
        if: failure()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        shell: bash
        run: |
          py_tail="$(tail -n 120 pytest.log 2>/dev/null || echo 'pytest.log missing')"
          export PY_TAIL="$py_tail"
          python - <<'PY'
          import os, json, urllib.request
          repo=os.environ.get("GITHUB_REPOSITORY","")
          ref=os.environ.get("GITHUB_REF_NAME","")
          server=os.environ.get("GITHUB_SERVER_URL","https://github.com")
          run=os.environ.get("GITHUB_RUN_ID","")
          body=(f"**CI failed**: {repo} â€¢ {ref}\n"
                f"<{server}/{repo}/actions/runs/{run}>\n\n"
                f"Pytest tail:\n```\n{os.environ.get('PY_TAIL','')}\n```")
          data=json.dumps({"content": body}).encode()
          req=urllib.request.Request(os.environ["DISCORD_WEBHOOK_URL"], data=data, headers={"Content-Type":"application/json"})
          with urllib.request.urlopen(req) as r:
              print(r.status)
          PY
