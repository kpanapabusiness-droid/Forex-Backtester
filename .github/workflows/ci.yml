name: CI
on:
  pull_request:
  push:
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Ruff
        run: ruff check . | tee ruff.log || true

      - name: Pytest
        run: pytest -q 2>&1 | tee pytest.log || true

      - name: Smoke test
        run: python smoke_test_full_v198.py -q 2>&1 | tee smoke.log || true

      - name: Mark job failed if any step failed
        run: |
          set -e
          if grep -Eiq "error" ruff.log; then exit 1; fi
          if grep -Eiq "FAILED|FAILURES|failed|error|traceback|AssertionError" pytest.log; then exit 1; fi
          if grep -Eiq "Traceback|ERROR|failed|AssertionError" smoke.log; then exit 1; fi

      - name: Ensure jq is available
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Post to Discord on failure
        if: failure()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          tail -n 200 pytest.log > _pytest_tail.txt || true
          tail -n 120 smoke.log > _smoke_tail.txt || true
          {
            echo "**CI failed**: ${GITHUB_REPOSITORY} â€¢ ${GITHUB_REF_NAME}";
            if [ -n "${{ github.event.pull_request.html_url }}" ]; then
              echo "<${{ github.event.pull_request.html_url }}">;
            else
              echo "<${{ github.event.head_commit.url }}">;
            fi
            echo;
            echo "Pytest:";
            echo '```';
            cat _pytest_tail.txt;
            echo '```';
            echo;
            echo "Smoke:";
            echo '```';
            cat _smoke_tail.txt;
            echo '```';
          } > _body.txt
          jq -Rs '{content: .}' < _body.txt > payload.json
          curl -X POST -H "Content-Type: application/json" -d @payload.json "${DISCORD_WEBHOOK_URL}"
